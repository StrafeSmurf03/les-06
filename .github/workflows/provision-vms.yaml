name: Provisioning VMs with Terraform

stages:
  - build
  - deploy

on:
  push:
    branches:
      - main

    paths:
      - terraform/**/*.tf
      - terraform/**/*.tfvars
      - terraform/**/*.tftpl
  workflow_dispatch:

jobs:
  stage: build
  build:
    name: Terraform Apply
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Install ovftool
        run: |
          wget https://github.com/rgl/ovftool-binaries/raw/main/archive/VMware-ovftool-4.6.3-24031167-lin.x86_64.zip
          unzip VMware-ovftool-4.6.3-24031167-lin.x86_64.zip
          mv ovftool vmware-ovftool
          mv --backup=numbered vmware-ovftool /usr/bin/
          chmod +x /usr/bin/vmware-ovftool/ovftool*
          ln -s /usr/bin/vmware-ovftool/ovftool /usr/bin/ovftool

      - name: Terraform Init
        run: terraform init

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: terraform plan

      - name: Terraform Apply
        run: terraform apply -auto-approve

  ansible:
    stage: deploy
    name: Install Docker and Deploy Container
    runs-on: self-hosted
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ansible

      - name: execute ansible playbook
        run: |
          ansible-playbook -i inventory.ini main.yml 

      - name: Deploy Docker container
        run: |
          docker-compose -f /home/testuser/docker-compose.yaml up -d



